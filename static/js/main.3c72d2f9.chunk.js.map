{"version":3,"sources":["components/NavBar.js","components/CountryDropdown.js","containers/New.js","d3/DrawMap.js","d3/SizeLegend.js","d3/Color.js","d3/DisplayMapData.js","components/MapInput.js","containers/Home.js","d3/DrawBar.js","d3/Viz.js","containers/Show.js","components/Country.js","containers/Collection.js","App.js","index.js"],"names":["NavBar","style","paddingBottom","marginBottom","className","to","CountryDropdown","props","useState","collection","setCollection","countryData","setCountryData","Row","Col","xs","sm","md","lg","xl","onChange","event","target","value","split","country","countryName","a","requestOptions","method","redirect","fetch","response","json","data","fetchData","fetchCountry","placeholder","options","map","option","id","key","name","flagCode","pathname","disabled","length","index","flagUrl","toLowerCase","worldUrl","slug","Card","Header","Img","src","onError","e","New","countries","setCountries","useEffect","sort","b","Country","Slug","ISO2","DrawMap","console","log","svg","select","append","attr","projection","geoNaturalEarth1","pathGenerator","geoPath","g","type","call","zoom","on","transform","Promise","all","tsv","then","tsvData","topoJSONdata","forEach","d","iso_n3","feature","objects","selectAll","features","enter","text","sizeLegend","selection","sizeScale","spacing","textOffset","numTicks","tickFormat","ticks","filter","reverse","groups","groupsEnter","merge","i","exit","remove","color","caseType","DisplayMapData","caseTitle","radiusValue","scaleSqrt","domain","max","range","countryInfo","long","lat","format","numberFormat","MapInput","countryResults","setCountryResults","coll","document","getElementsByClassName","collButton","querySelector","addEventListener","this","classList","toggle","innerText","content","nextElementSibling","display","onClick","Home","DrawBar","totalCases","dailyData","string","margin","innerWidth","vizName","yAxisLabel","charAt","toUpperCase","slice","title","xScale","scaleBand","dayCount","padding","yScale","scaleLinear","tip","d3Tip","offset","html","date","toLocaleDateString","total","active","recovered","deaths","xAxisG","join","bandwidth","show","hide","axisBottom","tickValues","yAxisG","axisLeft","tickSize","titleG","width","Viz","Show","setCaseType","location","process","Object","keys","Confirmed","array","parseData","day","push","Date","Active","Recovered","Deaths","Collection","App","basename","Container","fluid","exact","path","render","routerProps","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3c72d2f9.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n\n  return (\n    <div style={{ paddingBottom: '15px', marginBottom: '15px' }}>\n        <h1 className=\"header\" >COVID-19 World Tracker</h1>\n\n        <NavLink \n        to=\"/\">\n          <button className=\"nav\">Home</button>\n        </NavLink>\n\n        <NavLink \n        to=\"/new\">\n          <button className=\"nav\">Create a New Collection</button>\n        </NavLink>\n    </div>\n  );\n}\n\nexport default NavBar;","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { NavLink } from 'react-router-dom';\nimport { Row } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Card } from 'react-bootstrap'\n\n\n\nconst CountryDropdown = (props) => {\n\n    const [collection, setCollection] = useState([]);\n    const [countryData, setCountryData] = useState([]);\n\n    const fetchCountry = (country, countryName) => {\n\n        async function fetchData() {\n\n            const requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            \n            const response = await fetch(`https://api.covid19api.com/total/dayone/country/` + `${country}`, requestOptions)\n            const data = await response.json()\n            setCountryData(countryData => [...countryData, {[countryName]: [data], slug: country}])\n        }\n\n        fetchData();\n    }\n\n    const invalid = () => collection.length === 0\n\n    return (\n        <div>\n            <Row>\n                <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"3\">\n\n                    <select onChange={ event => {setCollection([...collection, [event.target.value.split(\",\")[1], event.target.value.split(\",\")[2], event.target.value.split(\",\")[0]]]); \n                        fetchCountry(event.target.value.split(\",\")[0], event.target.value.split(\",\")[1])}}>\n\n                        <option placeholder=\"Choose a Collection of Countries\">Choose a Collection of Countries</option>\n                        {props.options.map(option => (\n                            <option\n                            id={props.id}\n                            key={option.value}\n                            value={[option.value, option.name, option.flagCode]}\n                            >\n                            {option.name}\n                            </option>\n                        ))}\n                    </select>\n\n                    <NavLink \n                        to = {{\n                            pathname: `/collection`,\n                            countryData,\n                            collection\n                        }}>\n                        <button className=\"dark\" disabled={invalid()}>View Collection</button>\n                    </NavLink>\n\n                </Col>\n\n\n                {collection.map( (country, index) => {\n                    const flagUrl = `https://disease.sh/assets/img/flags/${country[1].toLowerCase()}.png`\n                    const worldUrl = `https://freesvg.org/img/Globe-Icon-Umber.png`\n                    const slug = country[2]\n\n                    return (\n                        <Col xs={12} sm={6} md={4} lg={3} key={index}>\n                            <Card>\n                                <Card.Header>{country[0]}</Card.Header>\n\n                                <Card.Img key={slug} src={flagUrl} onError={(e)=>{ \n                                    if (e.target.src !== worldUrl) {\n                                        e.target.src=worldUrl;}\n                                    }}/>\n                            </Card>\n                        </Col>\n                    )\n                })}\n            </Row>\n\n        </div>\n    )\n}\n\nexport default CountryDropdown\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport CountryDropdown from '../components/CountryDropdown'\n\nconst New = () => {\n    const [countries, setCountries] = useState([]);\n \n    useEffect( () => {\n        async function fetchData() {\n            var requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n              };\n\n            const response = await fetch(\"https://api.covid19api.com/countries\", requestOptions)\n            const data = await response.json()\n            setCountries(data)\n        }\n        fetchData();\n    }, []); \n\n    const options = countries.sort((a, b) => (a.Country > b.Country) ? 1 : -1).map( country => {\n        return (\n            {name: country.Country, value: country.Slug, flagCode: country.ISO2}\n        )\n    })\n\n    return (\n        <div>\n            <CountryDropdown options={options} />\n        </div>\n    )\n}\n\nexport default New","import { select, json, geoPath, geoNaturalEarth1, tsv, zoom, event } from 'd3';\nimport { feature } from 'topojson';\n\nconst DrawMap = () => {\n    console.log(\"drawing map\")\n\n    // setting up svg element on Home component; making size responsive\n    const height = 500\n    const width = 960\n\n    const svg = select(\".mapviz\").append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n        .attr(\"viewBox\", [0, 0, width, height])\n\n    // specifying map projection\n    const projection = geoNaturalEarth1();\n    const pathGenerator = geoPath().projection(projection);\n\n    // creating a group to arrange map elements\n    const g = svg.append(\"g\")\n        .attr(\"class\", \"map-group\")\n    g.append('path')\n        .attr('class', 'sphere')\n        .attr('d', pathGenerator({type: 'Sphere'}));\n\n\n\n    // enabling zooming/panning on entire svg\n    svg.call(zoom().on(\"zoom\", () => {\n        g.attr(\"transform\", event.transform)\n    }))\n\n\n\n    \n    // fetching and loading geographic data\n        // tsvData supplies country names\n        // topoJSONdata supplies geographic coordinates for each country\n    Promise.all([\n        tsv('https://unpkg.com/world-atlas@1.1.4/world/50m.tsv'),\n        json('https://unpkg.com/world-atlas@1.1.4/world/50m.json')\n    ])\n    .then(([ tsvData, topoJSONdata ]) => {\n\n        // parses tsvData to extract country names for base map titles\n        const countryName = {}\n        tsvData.forEach(d => {\n            countryName[d.iso_n3] = d.name\n        })\n\n        // draws a path for each country with countryName as title (shown on hover)\n        const countries = feature(topoJSONdata, topoJSONdata.objects.countries);\n        g.selectAll('path').data(countries.features)\n        .enter().append('path')\n            .attr('class', 'country')\n            .attr('d', pathGenerator)\n        .append(\"title\")\n            .text(d => countryName[d.id])\n    })\n}\n\nexport default DrawMap","export const sizeLegend = (selection, props) => {\n    const {\n      sizeScale,\n      spacing,\n      textOffset,\n      numTicks,\n      tickFormat\n    } = props;\n    \n    const ticks = sizeScale.ticks(numTicks)\n      .filter(d => d !== 0)\n      .reverse();\n  \n    const groups = selection.selectAll('g').data(ticks);\n    const groupsEnter = groups\n      .enter().append('g')\n        .attr('class', 'tick-map');\n    groupsEnter\n      .merge(groups)\n        .attr('transform', (d, i) =>\n          `translate(0, ${i * spacing})`\n        );\n    groups.exit().remove();\n    \n    groupsEnter.append('circle')\n      .merge(groups.select('circle'))\n        .attr('r', sizeScale);\n    \n    groupsEnter.append('text')\n      .merge(groups.select('text'))\n        .text(tickFormat)\n        .attr('dy', '0.32em')\n        .attr('x', d => sizeScale(d) + textOffset);\n  }","export const color = (caseType) => {\n    switch (caseType) {\n        case \"population\":\n            return \"#B396AD\"\n        case \"todayCases\":\n            return \"#B37055\"\n        case \"todayDeaths\":\n            return \"#F6B656\"  \n        case \"cases\":\n            return \"#BD2D28\"\n        case \"active\" || \"Active\":\n            return \"#E3BA22\"\n        case \"critical\":\n            return \"#137B80\"\n        case \"deaths\" || \"Deaths\":\n            // return \"#BA5F06\"\n            return \"#E6842A\"\n        case \"recovered\" || \"Recovered\":\n            return \"#A0B700\"\n        case \"tests\":\n            return \"#684664\"\n        case \"casesPerOneMillion\":\n            return \"#9A3E25\"\n        case \"activePerOneMillion\":\n            return \"#F2DA57\"\n        case \"criticalPerOneMillion\":\n            return \"#42A5B3\"\n        case \"deathsPerOneMillion\":\n            return \"#E6842A\"\n        case \"recoveredPerOneMillion\":\n            return \"#5C8100\"\n        case \"testsPerOneMillion\":\n            return \"#8E6C8A\" \n        case \"Confirmed\":   \n            return \"#BD2D28\"\n        case \"Active\":   \n            return \"#E3BA22\"\n        case \"Recovered\":  \n           return \"#A0B700\"\n        case \"Deaths\":   \n            return \"#BA5F06\"\n        default:\n            return \"#BD2D28\"\n    }\n}","import { select, geoNaturalEarth1, scaleSqrt, max, format, selectAll, zoom, event} from 'd3'\nimport { sizeLegend } from './SizeLegend'\nimport { color } from './Color'\nimport DrawMap from './DrawMap'\n\nconst DisplayMapData = (caseType, caseTitle, data) => {\n    data.sort((a, b) => a[`${caseType}`] < b[`${caseType}`] ? 1 : -1)\n\n    // resetting to blank map\n    selectAll(\"circle\").remove()\n    select(\"g.map-legend\").remove()\n    select(\"text.legend-title\").remove()\n\n    // add new caseType data to build new visualization\n    if (caseType !== \"reset\") {    \n\n        const g = select(\".map-group\")\n\n        const projection = geoNaturalEarth1();\n        const radiusValue = d => d[`${caseType}`];\n\n        const sizeScale = scaleSqrt()\n            .domain([0, max(data, d => d[`${caseType}`], radiusValue)])\n            .range([0, 20]);\n\n        g.selectAll('circle').data(data)\n        .enter().append('circle')\n            .attr('class', 'country-circle')\n            // setting x and y coordiantes by translating country coordinate data to pixels\n            .attr(\"transform\", function(d) { return \"translate(\" + projection([d.countryInfo.long, d.countryInfo.lat]) + \")\"; })\n            .attr(\"r\", d => sizeScale(radiusValue(d)))\n            .attr(\"fill\", color(caseType))\n        .append(\"title\")\n            .text(d => d.country + \" \" + caseTitle + \": \"\n            + format(',')(d[`${caseType}`]))\n\n\n\n        // adding size legend\n        const numberFormat = format(',');\n\n        const legend = g.append('g')\n            .attr('transform', `translate(65, 125)`)\n            .attr('class', 'map-legend')\n            .call(sizeLegend, {\n                sizeScale,\n                spacing: 45,\n                textOffset: 10,\n                numTicks: 5,\n                tickFormat: numberFormat \n            })\n\n        // adding map title on side of legend\n        const title = g.append('text')\n            .attr('class', 'legend-title')\n            .text(caseTitle)\n            .attr('transform', 'rotate(270)')\n            .attr('x', -245)\n            .attr('y', 45);\n\n        // color-coding all circles based on caseType from user input\n        g.selectAll(\"circle\")\n            .attr(\"fill\", color(caseType));\n\n        // raises the current circle when moused over\n        // selectAll(\"circle\").on(\"mouseover\", function(){\n        //     select(this).raise()\n        // });\n    } else {\n        // remove entire svg and re-draw map to reset to original zoom level\n        select(\"svg\").remove()\n        DrawMap()\n    }\n}\n\nexport default DisplayMapData","import React, { useState, useEffect } from 'react';\nimport DisplayMapData from '../d3/DisplayMapData'\n\nconst MapInput = () => {\n\n    const [countryResults, setCountryResults] = useState([])\n\n    useEffect( () => {\n        async function fetchData() {\n            const response = await fetch('https://corona.lmao.ninja/v2/countries')\n            const data = await response.json()\n            setCountryResults(data)\n        }\n        fetchData();\n    }, [])   \n    \n    // logic for collapsing map choices\n    let coll = document.getElementsByClassName(\"collapsible1\");\n    let collButton = document.querySelector(\"button.collapsible1\")\n    let i\n\n    for (i = 0; i < coll.length; i++) {\n        coll[i].addEventListener(\"click\", function() {\n            this.classList.toggle(\"active\");\n\n            if (collButton.innerText === \"Open Map Menu\") {\n                collButton.innerText = \"Close Map Menu\"\n            } else {\n                collButton.innerText = \"Open Map Menu\"\n            }\n            \n            var content = this.nextElementSibling;\n            if (content.style.display === \"none\") {\n              content.style.display = \"block\";\n            } else {\n              content.style.display = \"none\";\n            }\n        });\n    }\n\n\n    return (\n        <span>\n            <button className=\"collapsible1\">Close Map Menu</button>\n            <div className=\"content1\">\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"cases block\" value=\"cases\">Total Cases</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"casesPerOneMillion block\" value=\"casesPerOneMillion\">Total Cases Per Million</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"todayCases block\" value=\"todayCases\">New Cases Today</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"deaths block\" value=\"deaths\">Total Deaths</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"deathsPerOneMillion block\" value=\"deathsPerOneMillion\">Deaths Per Million</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"todayDeaths block\" value=\"todayDeaths\">New Deaths Today</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"activee block\" value=\"active\">Active Cases</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"activePerOneMillion block\" value=\"activePerOneMillion\">Active Cases Per Million</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"recoveredPerOneMillion block\" value=\"recoveredPerOneMillion\">Recovered Cases Per Million</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"critical block\" value=\"critical\">Critical Cases</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"criticalPerOneMillion block\" value=\"criticalPerOneMillion\">Critical Cases Per Million</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"tests block\" value=\"tests\">Number of Tests</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"testsPerOneMillion block\" value=\"testsPerOneMillion\">Tests Per Million</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"population block\" value=\"population\">Population</button>\n                <button onClick={event => DisplayMapData(event.target.value, event.target.innerText, countryResults)} className=\"reset block\" value=\"reset\">Reset Map</button>\n            </div>\n        </span>\n    )\n}\n\nexport default MapInput","import React, { useEffect } from 'react';\n\nimport DrawMap from '../d3/DrawMap'\nimport MapInput from '../components/MapInput'\n\nimport { Row } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Card } from 'react-bootstrap'\n\n\nconst Home = () => {\n\n    useEffect( () => {\n        DrawMap(); \n    }, [])\n\n    return (\n        <Row>\n            <Col sm=\"12\" md=\"3\" lg=\"3\" xl=\"3\">\n                <Card>\n                    <MapInput />\n                </Card>\n            </Col>\n            <Col sm=\"12\" md=\"9\" lg=\"9\" xl=\"9\" >\n                <Card className=\"mapviz\">\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Home\n\n{/* <h1>HOME component placeholder</h1>\n<h3>To Dos...</h3>\n<ul>\n    <li>render About / Instructions</li>\n    <li>fix rendering lag bug on Map (DisplayMapData)</li>\n</ul> */} ","// **************DO NOT DELETE: WORKING CODE FOR SIMPLE BAR CHART!!!!****************\nimport {\n    max, scaleBand, scaleLinear, axisBottom, axisLeft, select, zoom, event\n} from 'd3'\n\nimport d3Tip from \"d3-tip\";\nimport { color } from './Color'\n\n\n// TO DOS:\n    // add stacked bar\nconst DrawBar = (countryName, totalCases, dailyData, id, caseType) => {\n    console.log(caseType)\n\n    caseType ? caseType = caseType : caseType = \"total\"\n\n    function jsUcfirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    // setting up constants for sizes\n    const width = 960\n    const height = 500\n    const padding = .2\n    const margin = ({top: 80, right: 0, bottom: 80, left: 80})\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n    const vizName = \"viz\" + id\n\n\n    // setting constants for text labels and title\n    const xAxisLabel = \"Number of Days\"\n    const yAxisLabel = caseType ? `Number of Cases: ${jsUcfirst(caseType)}` : \"Number of Cases\"\n    const title = countryName\n    const subtitle = () => {\n        if (dailyData.length > 0) {\n            return totalCases + \" COVID-19 Cases Reported Since \" + dailyData[0].date.toLocaleDateString()\n        } else {\n            return totalCases + \" COVID-19 Cases Reported\"\n        }\n    }\n\n\n        \n    \n\n\n    const xScale = scaleBand()\n        .domain(dailyData.map(d => d.dayCount))\n        .range([margin.left, width - margin.right])\n        .padding(padding)\n\n\n\n\n    const yScale = scaleLinear()\n        .domain([0, max(dailyData, d => d[`${caseType}`])])\n        .range([height - margin.bottom, margin.top])\n\n\n\n\n    const xAxis = (g) => {\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(axisBottom(xScale)\n        .tickValues(xScale.domain().filter(function(d,i){ return !(((i+1)%5))})))\n\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dailyData.dayCount))\n\n    }\n\n    \n    const yAxis = (g) => {\n        g.attr(\"transform\", `translate(${margin.left},0)`)\n        .call(axisLeft(yScale).ticks(null, dailyData.format).tickSize(-innerWidth))\n            \n            .call(g => g.select(\".domain\").remove())\n\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(dailyData.total))\n    }\n\n\n\n    // setting up tooltip with data labels\n    const tip = d3Tip()\n        .attr('class', 'd3-tip')\n        .offset([-10, 0])\n        .html(function(d) {\n            return \"<p>\" + \"<span style='color:white'>\" + \"Day \" + d.dayCount + \"<br/>\" +\n                d.date.toLocaleDateString() + \"<br/>\" + \"</span>\" +\n                \"<span style='color:#BD2D28'>\" + d.total + \" Total\" + \"<br/>\" + \"</span>\" +\n                \"<span style='color:#E3BA22'>\" + d.active + \" Active\" + \"<br/>\" + \"</span>\" +\n                \"<span style='color:#A0B700'>\" + d.recovered + \" Recovered\" + \"<br/>\" + \"</span>\" +\n                \"<span style='color:#BA5F06'>\" + d.deaths + \" Deaths\" + \"</p>\" \n        })\n\n\n\n\n    \n\n\n\n    // setting up svg element on card\n    const svg = select(`.${vizName}`)\n        .append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMid meet\")\n        .attr(\"viewBox\", [0, 0, width, height])\n\n    const g = svg.append(\"g\")\n        .attr(\"fill\", color(caseType))\n        .selectAll('rect')\n        .data(dailyData)\n        .join(\"rect\")\n        .attr('x', d => xScale(d.dayCount))\n\n        .attr(\"y\", d => yScale(d[`${caseType}`]))\n        .attr(\"width\", xScale.bandwidth())\n        .attr(\"height\", d => yScale(0) - yScale(d[`${caseType}`]))\n        .attr(\"class\", \"bar\")\n        .on('mouseover', tip.show)\n        .on('mouseout', tip.hide)\n\n\n\n\n    const xAxisG = svg.append('g')\n        .call(xAxis)\n        \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 45)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel)\n\n\n\n\n\n\n\n    const yAxisG = svg.append('g')\n        .call(yAxis)\n        \n    yAxisG.select('.domain').remove();\n    \n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -height / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n\n\n\n    const titleG = svg.append(\"g\")\n\n    titleG.append('text')\n        .attr('class', 'title')\n        .attr('x', width / 2)\n        .attr('y', 40)\n        .attr('text-anchor', 'middle')\n        .text(title);\n\n        titleG.append('text')\n        .attr('class', 'subtitle')\n        .attr('x', width / 2)\n        .attr('y', 70)\n        .attr('text-anchor', 'middle')\n        .text(subtitle());\n\n    svg.call(tip);\n\n        // enabling zooming/panning on entire svg\n        // svg.call(zoom().on(\"zoom\", () => {\n        //     g.attr(\"transform\", event.transform)\n        // }))\n}\n\nexport default DrawBar","import React, { useEffect } from 'react';\nimport DrawBar from './DrawBar'\n\nconst Viz = (props) => {\n    console.log(props)\n\n    useEffect( () => {\n\n        DrawBar(props.countryName, props.totalCases, props.dailyData, props.id, props.caseType)\n    }, [props])\n\n    return (\n        <div className={\"viz\" + props.id} ></div>\n    )\n}\n\nexport default Viz","import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\n\nimport Viz from '../d3/Viz'\nimport { Card } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom';\n\nimport { selectAll } from 'd3'\n\n\nconst Show = (props) => {\n    const [caseType, setCaseType] = useState(\"\");\n\n\n    if (props.location.countryName) {\n        return (\n            <div>\n                <Row className=\"justify-content-md-center\">\n                <Col sm=\"12\" md=\"3\" lg=\"3\" xl=\"3\">\n                        <Card>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n\n\n                            <NavLink\n                                to = {{\n                                    pathname: `/collection`,\n                                    countryData: props.location.collection\n                                }}>\n                                <button className=\"reset block\">Return to Collection</button>\n                            </NavLink>\n                        </Card> \n                    </Col>\n\n                    <Col sm=\"12\" md=\"9\" lg=\"9\" xl=\"9\" >\n                        <Card className=\"show\">\n                            <Viz countryName={props.location.countryName} totalCases={props.location.totalCases} dailyData={props.location.dailyData} id={props.location.slug} slug={props.location.slug} caseType={caseType}/>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n    } else {\n        // return <Redirect to='/' />\n        return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n    }\n}\n\nexport default Show","import React from 'react';\nimport Viz from '../d3/Viz'\n\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst Country = (props) => {\n    const countryName = Object.keys(props.country)[0]\n    const dailyData = props.country[countryName]\n\n    const totalCases = () => {\n        if (dailyData[0].length === 0) {\n            return 0\n        } else {\n            return dailyData[0][dailyData[0].length-1].Confirmed\n        }\n    }\n\n    const array = []\n\n    const parseData = (data, array) => {\n        data[0].forEach( (day, index) => {\n            array.push({\n                dayCount: index + 1,\n                date: new Date(day.Date),\n                total: day.Confirmed, \n                active: day.Active, \n                recovered: day.Recovered, \n                deaths: day.Deaths\n            })\n        })\n        return array\n    }\n\n\n    return (\n        <NavLink\n            to = {{\n                pathname: `/countries/${props.country.slug}`,\n                countryName,\n                totalCases: totalCases(),\n                dailyData: parseData(dailyData, array), \n                slug: props.country.slug, \n                id: props.country.slug,\n                collection: props.collection\n            }}>\n            <Viz countryName={countryName} totalCases={totalCases()} dailyData={parseData(dailyData, array)} id={props.country.slug} slug={props.country.slug} caseType={props.caseType}/>\n        </NavLink>\n    )\n}\n\nexport default Country\n\n","import React, { useState } from 'react';\nimport { Redirect } from \"react-router\"\nimport Country from '../components/Country'\nimport { Card } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\nimport { selectAll } from 'd3'\n\nconst Collection = (props) => {\n    const [caseType, setCaseType] = useState(\"\");\n\n\n    if (props.location.countryData) {\n        return (\n            <div>\n                <Row >\n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"3\">\n                        <Card>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"cases block\" value=\"total\">Total Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"deathsPerOneMillion block\" value=\"deaths\">Deaths</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"activee block\" value=\"active\"> Active Cases</button>\n                            <button onClick={event => (setCaseType(event.target.value), selectAll(\"svg\").remove())} className=\"recovered block\" value=\"recovered\">Recovered Cases</button>\n                        </Card>\n                    </Col>\n\n                    {props.location.countryData.map((country, index) => { \n                        return (\n                            <Col xs={12} sm={6} md={4} lg={3} key={index}>\n                                <Card>\n                                    <Country key={index} id={index} country={country} caseType={caseType} collection={props.location.countryData}/> \n                                </Card>\n                            </Col>\n                        )\n                    })}\n                </Row>\n            </div>\n        )\n    } else {\n        // return <Redirect to='/' />\n        return <Redirect to={process.env.PUBLIC_URL} />\n        // return <h3>Use the Buttons Above to Get Started</h3>\n\n    }\n}\n\nexport default Collection\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport NavBar from './components/NavBar';\nimport New from './containers/New'\nimport Home from './containers/Home'\nimport Show from './containers/Show'\nimport Collection from './containers/Collection'\n\nimport Container from 'react-bootstrap/Container';\n\nfunction App() {\n  return (    \n      <Router basename={process.env.PUBLIC_URL}>\n        <Container fluid >\n          <div >\n            <NavBar />\n            <Route exact path={`/`} render={ (routerProps) => <Home routerProps={routerProps}/>}/>\n            <Route exact path=\"/countries/:slug\" component={Show} />\n            <Route exact path={`/new`} component={New} />\n            <Route exact path={`/collection`} component={Collection} />\n          </div>\n        </Container>\n      </Router>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n// import { Provider } from 'react-redux';\n// import { createStore, applyMiddleware, compose } from 'redux';\n// import thunk from 'redux-thunk';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n// import rootReducer from './reducers/rootReducer'\nimport App from './App';\n\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(rootReducer, composeEnhancers(\n//     applyMiddleware(thunk)\n//   ));\n\n\n\nReactDOM.render(\n  // <Provider store={store}>\n  <BrowserRouter>\n\n    <App />\n    </BrowserRouter>,\n  // </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}